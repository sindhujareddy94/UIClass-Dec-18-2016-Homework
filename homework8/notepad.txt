1)	what are pseudo classes in css?
A pseudo class is a keyword added to selectors that specifies a special state of the element to be selected. 
pseudo classes with pseudo elements let you apply a style to an element not only in relation to the content of the document tree, but also in relation to external factors like the history of the navigator, the status of its content, or the position of the mouse.
Syntax: selector:pseudo-class {
		Property: value;
	}
2)	what are pseudo elements in css?
Pseudo elements are same as pseudo classes. Pseudo elements are added to selectors instead of describing a special state, they allow you to style certain parts of an element. For example, the ::first-line pseudo-element targets only the first line of an element specified by the selector.
Syntax: selector::pseudo-element {
		Property: value;
	}
Pseudo elements:
::after
::before
::first-letter
::first-line
::selection
::backdrop
::placeholder
::marker
::spelling-error
::grammar-error

3)	diff between pseudo classes and pseudo elements?
Pseudo-classes select regular elements when their position relative to siblings or when they are under a particular state.
Dynamic pseudo-classes
:link
:visited
:hover
:active
:focus
UI element states pseudo-classs
:enabled
:disabled
:checked
structural pseudo-classes
:first-child
:nth-child(n)
:nth-last-child(n)
:nth-of-type(n)
:nth-last-of-type(n)
:last-child
:first-of-type
:last-of-type
:only-child
:only-of-type
:root
:empty
Other pseudo-classes
:not(x)
:target
:lang(language)
Pseudo-elements effectively create new elements that are not specified in the markup of the document and can be manipulated much like a regular element. This introduces huge benefits for creating cool effects with minimal markup, also aiding significantly in keeping the presentation of the document out of the HTML and in CSS where it belongs.
The difference between pseudo-classes and pseudo-elements is to use double colon on pseudo-elements.


4) explain all pseudo classes and elements with examples?
	http://www.w3schools.com/cssref/css_selectors.asp
Pseudo classes:
:active 
Ex: a:active – it selects the active link
:checked
Ex: input:checked – selects every checked <input> element
:disabled
Ex: input:disabled – selects every disabled <input> element
:empty
Ex: p:empty – selects every <p> element that has no children
:enabled
Ex: input:enabled – selects every enabled <input> element
:first-child
Ex: p:first-child – slects every <p> elements that is the first child of its parent
:first-of-type
Ex: p:first-of-type – selects every <p> element that is the first element of its parent
:focus
Ex: input:focus – selects the <input> element that has focus
:hover
Ex: a:hover – selects link on mouse over
:in-range
Ex: input:in-range – selects <input> elements with a value within a specified range
:invalid
Ex: input:invalid – selects all <input> elements with an invalid value
:lang(language)
Ex: p:lang(it) – selects every <p> element with a lang attribute value starts with “it”
:last-child
Ex: p:last-child – slects every <p> element that is the last child of its parent.
:last-of-type
Ex: p:last-of-tyoe - - slects every <[p> element that is the last <p> element of its parent
:link
Ex: a:link – slects all unvisited links
:not(selector)
Ex: :not(p) slects every element that is not a <p> element
:nth-child(n) 
Ex: p:nth-child(2) -  selects every <p> element that is the second child of its parent
:nth-last-child(n) 
Ex: p:nth-last-child(2) -  selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n) 
Ex: p:nth-last-of-type(2) -  selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n) 
Ex: p:nth-of-type(2) -  selects every <p> element that is the second <p> element of its parent
:only-of-type(n) 
Ex: p:only-of-type(2) -  selects every <p> element that is the only <p> element of its parent
:only-child
Ex: p:only-child – slects every <p> element that is the only child of its parent
:optional
Ex: input:optional – selects <input> elements with no “required” attribute
:out-of-range
Ex: input:out-of-range – selects <input> elements with a value outside a specified range
:read-only
Ex: input:read-only – selects <input> elements with a “readonly” attribute specified
:read-write
Ex: input:read-write – selects <input> elements with no “readonly” attribute
:required
Ex: input:required – selects <input> elements with a “required” attribute specified
:root
Ex:  root - - selects the document’s root element 
:target
Ex: #news:target – selects the current active #news element
:valid
Ex: input:valid – selcts all <input> elements with a valid value
:visited
Ex: a:visited – selects all visited links

Pseudo Elements

::after
Ex: p::after – insert something after the content of each <p> element
::before
Ex: p::before – insert something before the content of each <p> element
::first-letter
Ex: p::first-letter – selects the first letter of each <p> element
::first-line
Ex: p::first-line -  selects the first line of each <p> element
::selection
Ex: p::selection - -selects the portion of an element that is selected by a user

5)	what are media queries in css and how can you use them?
Media query is a CSS technique which is introduced in CSS3. It uses the @media rule to include a block of CSS properties only if a certain condition is true.
Example:
@media only screen and (max-width: 300px) {
	body {
		background-color: yellow;
	}
}
in this case if the browser window is smaller than 300px, the background color will change to yellow color.
Using media query we can add a breakpoint where certain parts of the design will behave differently on each side of the breakpoint.

6) what is responsive web design?
Responsive web design will make your web page look good on every device. It uses only HTML and CSS. Responsive web design not a program or a java script.
We use different devices as desktops, tablets, phones. The web page should look good and be easy to use regardless of the device. Webpages should also not leave any information if the device screen is small but it should change its style to display everything. For this reason we use responsive web design in order to fit the content in any device.
